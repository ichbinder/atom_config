(function() {
  var $, GitTimeplot, GitTimeplotPopup, RevisionView, View, d3, moment, _, _ref;

  _ref = require("atom-space-pen-views"), $ = _ref.$, View = _ref.View;

  _ = require('underscore-plus');

  moment = require('moment');

  d3 = require('d3');

  GitTimeplotPopup = require('./git-timeplot-popup');

  RevisionView = require('./git-revision-view');

  module.exports = GitTimeplot = (function() {
    function GitTimeplot(element) {
      this.element = element;
      this.$element = $(this.element);
      this._debouncedRenderPopup = _.debounce(this._renderPopup, 50);
      this._debouncedHidePopup = _.debounce(this._hidePopup, 50);
      this._debouncedViewNearestRevision = _.debounce(this._viewNearestRevision, 100);
    }

    GitTimeplot.prototype.hide = function() {
      var _ref1;
      return (_ref1 = this.popup) != null ? _ref1.remove() : void 0;
    };

    GitTimeplot.prototype.show = function() {};

    GitTimeplot.prototype.render = function(editor, commitData) {
      var svg, _ref1;
      this.editor = editor;
      this.commitData = commitData;
      if ((_ref1 = this.popup) != null) {
        _ref1.remove();
      }
      this.file = this.editor.getPath();
      this.$timeplot = this.$element.find('.timeplot');
      if (this.$timeplot.length <= 0) {
        this.$timeplot = $("<div class='timeplot'>");
        this.$element.append(this.$timeplot);
      }
      if (this.commitData.length <= 0) {
        this.$timeplot.html("<div class='placeholder'>No commits, nothing to see here.</div>");
        return;
      }
      svg = d3.select(this.$timeplot.get(0)).append("svg").attr("width", this.$element.width()).attr("height", 100);
      this._renderAxis(svg);
      this._renderBlobs(svg);
      this._renderHoverMarker();
      return this.$timeplot;
    };

    GitTimeplot.prototype._renderAxis = function(svg) {
      var h, left_pad, maxDate, maxHour, minDate, minHour, pad, w, xAxis, yAxis;
      w = this.$element.width();
      h = 100;
      left_pad = 20;
      pad = 20;
      minDate = moment.unix(this.commitData[this.commitData.length - 1].authorDate).toDate();
      maxDate = moment.unix(this.commitData[0].authorDate).toDate();
      minHour = d3.min(this.commitData.map(function(d) {
        return moment.unix(d.authorDate).hour();
      }));
      maxHour = d3.max(this.commitData.map(function(d) {
        return moment.unix(d.authorDate).hour();
      }));
      this.x = d3.time.scale().domain([minDate, maxDate]).range([left_pad, w - pad]);
      this.y = d3.scale.linear().domain([minHour, maxHour]).range([10, h - pad * 2]);
      xAxis = d3.svg.axis().scale(this.x).orient("bottom");
      yAxis = d3.svg.axis().scale(this.y).orient("left").ticks(0);
      svg.append("g").attr("class", "axis").attr("transform", "translate(0, " + (h - pad) + ")").call(xAxis);
      return svg.append("g").attr("class", "axis").attr("transform", "translate(" + (left_pad - pad) + ", 0)").call(yAxis);
    };

    GitTimeplot.prototype._renderBlobs = function(svg) {
      var max_r, r;
      max_r = d3.max(this.commitData.map(function(d) {
        return d.linesAdded + d.linesDeleted;
      }));
      r = d3.scale.linear().domain([0, max_r]).range([3, 15]);
      return svg.selectAll("circle").data(this.commitData).enter().append("circle").attr("class", "circle").attr("cx", (function(_this) {
        return function(d) {
          return _this.x(moment.unix(d.authorDate).toDate());
        };
      })(this)).attr("cy", (function(_this) {
        return function(d) {
          return _this.y(moment.unix(d.authorDate).hour());
        };
      })(this)).transition().duration(500).attr("r", function(d) {
        return r(d.linesAdded + d.linesDeleted || 0);
      });
    };

    GitTimeplot.prototype._renderHoverMarker = function() {
      var _this;
      this.$hoverMarker = this.$element.find('.hover-marker');
      if (!(this.$hoverMarker.length > 0)) {
        this.$hoverMarker = $("<div class='hover-marker'>");
        this.$element.append(this.$hoverMarker);
      }
      _this = this;
      this.$element.mouseenter(function(e) {
        return _this._onMouseenter(e);
      });
      this.$element.mousemove(function(e) {
        return _this._onMousemove(e);
      });
      this.$element.mouseleave(function(e) {
        return _this._onMouseleave(e);
      });
      this.$element.mousedown(function(e) {
        return _this._onMousedown(e);
      });
      return this.$element.mouseup(function(e) {
        return _this._onMouseup(e);
      });
    };

    GitTimeplot.prototype._onMouseenter = function(evt) {
      return this.isMouseInElement = true;
    };

    GitTimeplot.prototype._onMousemove = function(evt) {
      var relativeX;
      relativeX = evt.clientX - this.$element.offset().left;
      if (relativeX < this.$hoverMarker.offset().left) {
        this.$hoverMarker.css('left', relativeX);
      } else {
        this.$hoverMarker.css('left', relativeX - this.$hoverMarker.width());
      }
      if (this.isMouseDown) {
        this._hidePopup({
          force: true
        });
        return this._debouncedViewNearestRevision();
      } else {
        return this._debouncedRenderPopup();
      }
    };

    GitTimeplot.prototype._onMouseleave = function(evt) {
      this.isMouseInElement = false;
      this._debouncedHidePopup();
      return this.isMouseDown = false;
    };

    GitTimeplot.prototype._onMousedown = function(evt) {
      this.isMouseDown = true;
      this._hidePopup({
        force: true
      });
      return this._debouncedViewNearestRevision();
    };

    GitTimeplot.prototype._onMouseup = function(evt) {
      return this.isMouseDown = false;
    };

    GitTimeplot.prototype._renderPopup = function() {
      var commits, end, left, start, _ref1, _ref2, _ref3;
      if ((_ref1 = this.popup) != null ? _ref1.isMouseInPopup() : void 0) {
        left = this.popup.offset().left - this.$element.offset().left;
        if (this._popupRightAligned) {
          left += this.popup.width() + 7;
        }
        this.$hoverMarker.css({
          'left': left
        });
        return;
      }
      if (!this.isMouseInElement) {
        return;
      }
      if ((_ref2 = this.popup) != null) {
        _ref2.hide().remove();
      }
      _ref3 = this._filterCommitData(this.commitData), commits = _ref3[0], start = _ref3[1], end = _ref3[2];
      this.popup = new GitTimeplotPopup(commits, this.editor, start, end);
      left = this.$hoverMarker.offset().left;
      if (left + this.popup.outerWidth() + 10 > this.$element.offset().left + this.$element.width()) {
        this._popupRightAligned = true;
        left -= this.popup.width() + 7;
      } else {
        this._popupRightAligned = false;
      }
      return this.popup.css({
        left: left,
        top: this.$element.offset().top - this.popup.height() - 10
      });
    };

    GitTimeplot.prototype._hidePopup = function(options) {
      var _ref1, _ref2;
      if (options == null) {
        options = {};
      }
      options = _.defaults(options, {
        force: false
      });
      if (!options.force && (((_ref1 = this.popup) != null ? _ref1.isMouseInPopup() : void 0) || this.isMouseInElement)) {
        return;
      }
      return (_ref2 = this.popup) != null ? _ref2.hide().remove() : void 0;
    };

    GitTimeplot.prototype._filterCommitData = function() {
      var commits, left, relativeLeft, tEnd, tStart;
      left = this.$hoverMarker.offset().left;
      relativeLeft = left - this.$element.offset().left - 5;
      tStart = moment(this.x.invert(relativeLeft)).startOf('hour').subtract(1, 'minute');
      tEnd = moment(this.x.invert(relativeLeft + 10)).endOf('hour').add(1, 'minute');
      commits = _.filter(this.commitData, function(c) {
        return moment.unix(c.authorDate).isBetween(tStart, tEnd);
      });
      return [commits, tStart, tEnd];
    };

    GitTimeplot.prototype._getNearestCommit = function() {
      var filteredCommitData, tEnd, tStart, _ref1;
      _ref1 = this._filterCommitData(), filteredCommitData = _ref1[0], tStart = _ref1[1], tEnd = _ref1[2];
      if ((filteredCommitData != null ? filteredCommitData.length : void 0) > 0) {
        return filteredCommitData[0];
      } else {
        return _.find(this.commitData, function(c) {
          return moment.unix(c.authorDate).isBefore(tEnd);
        });
      }
    };

    GitTimeplot.prototype._viewNearestRevision = function() {
      var nearestCommit;
      nearestCommit = this._getNearestCommit();
      if (nearestCommit != null) {
        return RevisionView.showRevision(this.editor, nearestCommit.hash);
      }
    };

    return GitTimeplot;

  })();

}).call(this);

//# sourceMappingURL=data:application/json;base64,

//# sourceURL=/home/jakob/.atom/packages/git-time-machine/lib/git-timeplot.coffee
